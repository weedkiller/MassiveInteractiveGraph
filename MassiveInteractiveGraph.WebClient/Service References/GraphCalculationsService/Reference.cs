//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MassiveInteractiveGraph.WebClient.GraphCalculationsService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="GraphCalculationsService.IGraphCalculations")]
    public interface IGraphCalculations {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGraphCalculations/CalculateShortestRoute", ReplyAction="http://tempuri.org/IGraphCalculations/CalculateShortestRouteResponse")]
        System.Collections.Generic.List<int> CalculateShortestRoute(int nodeId1, int nodeId2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGraphCalculations/CalculateShortestRoute", ReplyAction="http://tempuri.org/IGraphCalculations/CalculateShortestRouteResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<int>> CalculateShortestRouteAsync(int nodeId1, int nodeId2);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGraphCalculationsChannel : MassiveInteractiveGraph.WebClient.GraphCalculationsService.IGraphCalculations, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GraphCalculationsClient : System.ServiceModel.ClientBase<MassiveInteractiveGraph.WebClient.GraphCalculationsService.IGraphCalculations>, MassiveInteractiveGraph.WebClient.GraphCalculationsService.IGraphCalculations {
        
        public GraphCalculationsClient() {
        }
        
        public GraphCalculationsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GraphCalculationsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GraphCalculationsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GraphCalculationsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<int> CalculateShortestRoute(int nodeId1, int nodeId2) {
            return base.Channel.CalculateShortestRoute(nodeId1, nodeId2);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<int>> CalculateShortestRouteAsync(int nodeId1, int nodeId2) {
            return base.Channel.CalculateShortestRouteAsync(nodeId1, nodeId2);
        }
    }
}
